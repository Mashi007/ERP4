import { xai } from '@ai-sdk/xai'
import { generateText } from 'ai'

// Verificar si xAI est√° configurado
const isAIAvailable = !!process.env.XAI_API_KEY

// Funci√≥n helper para generar respuestas con fallback
async function generateWithFallback(prompt: string, fallbackResponse: string): Promise<string> {
  if (!isAIAvailable) {
    return fallbackResponse
  }

  try {
    const { text } = await generateText({
      model: xai('grok-3'),
      prompt,
      maxTokens: 1000,
    })
    return text
  } catch (error) {
    console.error('AI generation failed:', error)
    return fallbackResponse
  }
}

// IA para Dashboard
export async function generateDashboardInsights(data: {
  totalContacts: number
  totalDeals: number
  totalRevenue: number
  activitiesCount: number
  appointmentsCount: number
  campaignsCount: number
}): Promise<string> {
  const prompt = `
    Analiza los siguientes datos del CRM y proporciona insights estrat√©gicos:
    
    - Total de contactos: ${data.totalContacts}
    - Total de oportunidades: ${data.totalDeals}
    - Ingresos totales: $${data.totalRevenue}
    - Actividades registradas: ${data.activitiesCount}
    - Citas programadas: ${data.appointmentsCount}
    - Campa√±as de marketing: ${data.campaignsCount}
    
    Proporciona un an√°lisis ejecutivo con:
    1. Estado general del negocio
    2. Fortalezas identificadas
    3. √Åreas de mejora
    4. Recomendaciones estrat√©gicas
    
    Responde en espa√±ol de forma profesional y concisa.
  `

  const fallback = `
    ## üìä An√°lisis Ejecutivo del CRM

    **Estado General:** El negocio muestra una actividad s√≥lida con ${data.totalContacts} contactos activos y ${data.totalDeals} oportunidades en el pipeline, generando $${data.totalRevenue} en ingresos potenciales.

    **Fortalezas:**
    ‚Ä¢ Base de contactos robusta con ${data.totalContacts} registros
    ‚Ä¢ Pipeline activo con m√∫ltiples oportunidades
    ‚Ä¢ Actividad comercial constante (${data.activitiesCount} actividades)

    **√Åreas de Mejora:**
    ‚Ä¢ Optimizar la conversi√≥n de contactos a oportunidades
    ‚Ä¢ Incrementar la frecuencia de seguimiento
    ‚Ä¢ Mejorar la segmentaci√≥n de campa√±as

    **Recomendaciones:**
    1. Implementar scoring de leads para priorizar contactos
    2. Automatizar secuencias de seguimiento
    3. Crear campa√±as segmentadas por industria
    4. Establecer KPIs de conversi√≥n por etapa
  `

  return generateWithFallback(prompt, fallback)
}

// IA para Citas
export async function generateAppointmentInsights(appointment: {
  title: string
  company: string
  contactName?: string
  dealValue?: number
  notes?: string
}): Promise<string> {
  const prompt = `
    Analiza la siguiente cita y proporciona insights para maximizar su efectividad:
    
    Cita: ${appointment.title}
    Empresa: ${appointment.company}
    ${appointment.contactName ? `Contacto: ${appointment.contactName}` : ''}
    ${appointment.dealValue ? `Valor del deal: $${appointment.dealValue}` : ''}
    ${appointment.notes ? `Notas: ${appointment.notes}` : ''}
    
    Proporciona:
    1. Contexto y preparaci√≥n recomendada
    2. Objetivos clave para la reuni√≥n
    3. Preguntas estrat√©gicas a realizar
    4. Pr√≥ximos pasos sugeridos
    
    Responde en espa√±ol de forma pr√°ctica y accionable.
  `

  const fallback = `
    ## üéØ Preparaci√≥n para: ${appointment.title}

    **Contexto:** Reuni√≥n estrat√©gica con ${appointment.company} para avanzar en la relaci√≥n comercial y cerrar oportunidades pendientes.

    **Objetivos Clave:**
    ‚Ä¢ Entender necesidades espec√≠ficas del cliente
    ‚Ä¢ Presentar soluciones alineadas con sus objetivos
    ‚Ä¢ Definir timeline y pr√≥ximos pasos
    ‚Ä¢ Identificar decisores y proceso de compra

    **Preguntas Estrat√©gicas:**
    1. ¬øCu√°les son sus principales desaf√≠os actuales?
    2. ¬øQu√© criterios utilizan para evaluar proveedores?
    3. ¬øCu√°l es su timeline para implementar una soluci√≥n?
    4. ¬øQui√©n m√°s est√° involucrado en la decisi√≥n?

    **Pr√≥ximos Pasos:**
    ‚Ä¢ Enviar resumen de la reuni√≥n en 24 horas
    ‚Ä¢ Proporcionar propuesta personalizada
    ‚Ä¢ Programar demo t√©cnica si es necesario
    ‚Ä¢ Definir fecha para seguimiento
  `

  return generateWithFallback(prompt, fallback)
}

// IA para Marketing
export async function generateMarketingCampaign(prompt: string, audience: string): Promise<{
  subject: string
  content: string
  recommendations: string
}> {
  const aiPrompt = `
    Crea una campa√±a de email marketing basada en:
    
    Prompt del usuario: ${prompt}
    Audiencia objetivo: ${audience}
    
    Genera:
    1. Subject line atractivo (m√°ximo 50 caracteres)
    2. Contenido del email (HTML simple, m√°ximo 300 palabras)
    3. Recomendaciones de optimizaci√≥n
    
    Responde en espa√±ol, tono profesional pero cercano.
  `

  const fallback = {
    subject: "üöÄ Oferta Especial - No te la Pierdas",
    content: `
      <h2>¬°Hola!</h2>
      <p>Tenemos una oferta especial dise√±ada especialmente para ti.</p>
      <p>Como cliente valorado, queremos ofrecerte acceso exclusivo a nuestros mejores productos y servicios con descuentos √∫nicos.</p>
      <p><strong>Beneficios incluidos:</strong></p>
      <ul>
        <li>Descuento del 20% en todos los productos</li>
        <li>Env√≠o gratuito en tu pr√≥xima compra</li>
        <li>Soporte prioritario por 3 meses</li>
      </ul>
      <p>Esta oferta es v√°lida por tiempo limitado.</p>
      <p><a href="#" style="background: #007bff; color: white; padding: 10px 20px; text-decoration: none; border-radius: 5px;">Aprovechar Oferta</a></p>
      <p>¬°Gracias por confiar en nosotros!</p>
    `,
    recommendations: `
      ‚Ä¢ Personalizar el saludo con el nombre del contacto
      ‚Ä¢ Incluir testimonios de clientes satisfechos
      ‚Ä¢ Agregar urgencia con contador de tiempo
      ‚Ä¢ Optimizar para dispositivos m√≥viles
      ‚Ä¢ Realizar A/B testing con diferentes subject lines
    `
  }

  if (!isAIAvailable) {
    return fallback
  }

  try {
    const { text } = await generateText({
      model: xai('grok-3'),
      prompt: aiPrompt,
      maxTokens: 800,
    })

    // Parsear la respuesta (simplificado)
    const lines = text.split('\n')
    const subject = lines.find(line => line.includes('Subject:'))?.replace('Subject:', '').trim() || fallback.subject
    const contentStart = text.indexOf('Contenido:')
    const recommendationsStart = text.indexOf('Recomendaciones:')
    
    const content = contentStart > -1 && recommendationsStart > -1 
      ? text.substring(contentStart + 10, recommendationsStart).trim()
      : fallback.content
    
    const recommendations = recommendationsStart > -1 
      ? text.substring(recommendationsStart + 15).trim()
      : fallback.recommendations

    return { subject, content, recommendations }
  } catch (error) {
    console.error('AI campaign generation failed:', error)
    return fallback
  }
}

export async function generateMarketingInsights(campaigns: any[]): Promise<string> {
  const prompt = `
    Analiza las siguientes campa√±as de marketing y proporciona insights:
    
    ${campaigns.map(c => `
    - ${c.name}: ${c.status}, Open Rate: ${c.open_rate}%, Click Rate: ${c.click_rate}%
    `).join('')}
    
    Proporciona:
    1. An√°lisis de rendimiento general
    2. Campa√±as con mejor performance
    3. √Åreas de mejora identificadas
    4. Recomendaciones espec√≠ficas
    
    Responde en espa√±ol de forma estrat√©gica.
  `

  const fallback = `
    ## üìà An√°lisis de Campa√±as de Marketing

    **Rendimiento General:** Las campa√±as muestran un engagement promedio del 35% en apertura y 10% en clicks, indicando una audiencia receptiva pero con oportunidades de mejora.

    **Mejores Performers:**
    ‚Ä¢ Campa√±as con ofertas espec√≠ficas tienen mayor engagement
    ‚Ä¢ Contenido personalizado genera m√°s clicks
    ‚Ä¢ Timing de env√≠o impacta significativamente

    **√Åreas de Mejora:**
    ‚Ä¢ Segmentaci√≥n m√°s granular de audiencias
    ‚Ä¢ Optimizaci√≥n de subject lines
    ‚Ä¢ Mejora en call-to-actions

    **Recomendaciones:**
    1. Implementar A/B testing sistem√°tico
    2. Personalizar contenido por segmento
    3. Optimizar horarios de env√≠o
    4. Crear secuencias automatizadas
    5. Mejorar dise√±o responsive
  `

  return generateWithFallback(prompt, fallback)
}

// IA para Comunicaciones
export async function generateCommunicationStrategy(contact: {
  name: string
  company: string
  status: string
  lastInteraction?: string
  dealValue?: number
}): Promise<string> {
  const prompt = `
    Genera una estrategia de comunicaci√≥n personalizada para:
    
    Contacto: ${contact.name}
    Empresa: ${contact.company}
    Estado: ${contact.status}
    ${contact.lastInteraction ? `√öltima interacci√≥n: ${contact.lastInteraction}` : ''}
    ${contact.dealValue ? `Valor potencial: $${contact.dealValue}` : ''}
    
    Proporciona:
    1. Enfoque de comunicaci√≥n recomendado
    2. Frecuencia de contacto sugerida
    3. Canales de comunicaci√≥n preferidos
    4. Mensajes clave a transmitir
    5. Pr√≥ximas acciones espec√≠ficas
    
    Responde en espa√±ol de forma pr√°ctica.
  `

  const fallback = `
    ## üí¨ Estrategia de Comunicaci√≥n - ${contact.name}

    **Enfoque Recomendado:** Comunicaci√≥n consultiva y orientada a valor, enfoc√°ndose en entender necesidades espec√≠ficas de ${contact.company}.

    **Frecuencia Sugerida:**
    ‚Ä¢ Contacto inicial: Inmediato
    ‚Ä¢ Seguimiento: Cada 7-10 d√≠as
    ‚Ä¢ Mantenimiento: Mensual

    **Canales Preferidos:**
    1. Email profesional (principal)
    2. LinkedIn para contenido de valor
    3. Llamadas telef√≥nicas para temas urgentes
    4. Video llamadas para presentaciones

    **Mensajes Clave:**
    ‚Ä¢ Expertise en soluciones para su industria
    ‚Ä¢ Casos de √©xito similares
    ‚Ä¢ ROI y beneficios tangibles
    ‚Ä¢ Soporte personalizado

    **Pr√≥ximas Acciones:**
    1. Enviar email de seguimiento personalizado
    2. Compartir caso de estudio relevante
    3. Proponer reuni√≥n de descubrimiento
    4. Conectar en LinkedIn con mensaje personalizado
  `

  return generateWithFallback(prompt, fallback)
}

// IA para Actividades
export async function generateActivityRecommendations(activities: any[]): Promise<string> {
  const prompt = `
    Analiza las siguientes actividades y proporciona recomendaciones de priorizaci√≥n:
    
    ${activities.map(a => `
    - ${a.title} (${a.type}): ${a.status} - ${a.company}
    `).join('')}
    
    Proporciona:
    1. Priorizaci√≥n de actividades por impacto
    2. Identificaci√≥n de oportunidades cr√≠ticas
    3. Recomendaciones de optimizaci√≥n de tiempo
    4. Pr√≥ximas acciones sugeridas
    
    Responde en espa√±ol de forma ejecutiva.
  `

  const fallback = `
    ## ‚ö° Recomendaciones de Actividades

    **Priorizaci√≥n por Impacto:**
    1. **Alta Prioridad:** Actividades de cierre con clientes calificados
    2. **Media Prioridad:** Seguimientos de propuestas enviadas
    3. **Baja Prioridad:** Actividades de prospecci√≥n inicial

    **Oportunidades Cr√≠ticas:**
    ‚Ä¢ Deals en etapa de negociaci√≥n requieren atenci√≥n inmediata
    ‚Ä¢ Contactos sin seguimiento por m√°s de 7 d√≠as
    ‚Ä¢ Propuestas pendientes de respuesta

    **Optimizaci√≥n de Tiempo:**
    ‚Ä¢ Agrupar llamadas en bloques de 2 horas
    ‚Ä¢ Automatizar emails de seguimiento
    ‚Ä¢ Usar plantillas para propuestas est√°ndar
    ‚Ä¢ Programar reuniones consecutivas

    **Pr√≥ximas Acciones:**
    1. Contactar inmediatamente deals en negociaci√≥n
    2. Enviar recordatorios de propuestas pendientes
    3. Programar llamadas de seguimiento
    4. Actualizar pipeline con informaci√≥n reciente
  `

  return generateWithFallback(prompt, fallback)
}
